<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<% include head %>
<body>
    <div id="wrapper">
        <% include topnav %>
        <% include sidenav %>

        <div id="page-wrapper" >
            <div id="page-inner">
                <div class="row">
                    <div class="col-md-12 text-center">
                        <h2> <span id="data-date"></span> | Power & Step Data</h2>   
                        <br>
                    </div>
                </div>  
                <script type="text/javascript">
                   $(document).ready(function() {
                        // console.log("enters");
                        var monthNames = [
                          "January", "February", "March",
                          "April", "May", "June", "July",
                          "August", "September", "October",
                          "November", "December"
                        ];
                        var date = new Date(<%- unixDay%> * 1000);
                        var day = date.getDate();
                        var monthIndex = date.getMonth();
                        var year = date.getFullYear();

                        // console.log(day, monthNames[monthIndex], year);
                        $("#data-date").text(monthNames[monthIndex] + ' ' + day + ', ' + year);

                    });
               </script>
                <div id="chartdiv"></div>
                <div class="tools text-center">
                    <div class="row">
                      <label>INDICES:</label><div id="indices" class="info">...</div>
                    </div>
                    <div class="row">
                      <label>TIME RANGE:</label><div id="selection" class="info">...</div>
                    </div>
                    <div class="row">
                      <label>POWER:</label><div id="power" class="info">...</div>
                    </div>
                    <div class="row">
                      <label>STEPS:</label><div id="steps" class="info">...</div>
                    </div>
                    <div class="row">
                      <label>POWER GENERATED PER STEP:</label><div id="powerPerStep" class="info">...</div>
                    </div>
                </div>
                <script type="text/javascript">

                    var chartData = <%- JSON.stringify(completeChartData) %>;
                    // console.log(chartData);
                    var chart = AmCharts.makeChart("chartdiv", {
                        "type": "serial",
                        "theme": "dark",
                        "legend": {
                            "useGraphSettings": true
                        },
                        "marginRight": 80,
                        "dataProvider": chartData,
                        "valueAxes": [{
                            "id":"v1",
                            "position": "left",
                            "title": "Energy (J)",
                            "axisThickness": 2,
                            "gridAlpha": 0,
                            "axisAlpha": 1,
                            "axisColor": "#FFA400",
                            "position": "left"
                        }, {
                            "id":"v2",
                            "position": "right",
                            "title": "Steps",
                            "axisThickness": 2,
                            "gridAlpha": 0,
                            "axisAlpha": 1,
                            "axisColor": "#87BCDE",
                            "position": "right"
                        }],
                        "graphs": [{
                            "valueAxis": "v1",
                            "lineColor": "#FFA400",
                            "fillAlphas": 0.4,
                            "title": "Energy Generated (J)",
                            "valueField": "power",
                            "balloonText": "<div style='margin:5px; font-size:19px;'>Energy Generated: <b>[[value]] J</b></div>"
                        }, {
                            "valueAxis": "v2",
                            "lineColor": "#87BCDE",
                            "fillAlphas": 0.4,
                            "title": "Steps",
                            "valueField": "steps",
                            "balloonText": "<div style='margin:5px; font-size:19px;'>Steps: <b>[[value]]</b></div>"
                        }],
                        "chartScrollbar": {
                            "graph": "v1",
                            "scrollbarHeight": 80,
                            "backgroundAlpha": 0,
                            "selectedBackgroundAlpha": 0.1,
                            "selectedBackgroundColor": "#888888",
                            "graphFillAlpha": 0,
                            "graphLineAlpha": 0.5,
                            "selectedGraphFillAlpha": 0,
                            "selectedGraphLineAlpha": 1,
                            "autoGridCount": true,
                            "color": "#AAAAAA"
                        },
                        "chartCursor": {
                            "categoryBalloonDateFormat": "JJ:NN:SS, DD MMMM",
                            "cursorPosition": "mouse"
                        },
                        "categoryField": "date",
                        "categoryAxis": {
                            "minPeriod": "fff",
                            "parseDates": true,
                            "axisColor": "#DADADA",
                            "minorGridEnabled": true
                        },
                        "export": {
                            "enabled": true,
                            "position": "bottom-right"
                        },
                        "listeners": [{
                            "event": "zoomed",
                            "method": function(e) {
                                var powerStart = chart.graphs[0].data[e.startIndex].dataContext.power;
                                var stepStart = chart.graphs[0].data[e.startIndex].dataContext.steps;
                                var powerEnd = chart.graphs[0].data[e.endIndex].dataContext.power;
                                var stepEnd = chart.graphs[0].data[e.endIndex].dataContext.steps;

                              var indicesText = e.startIndex;
                              indicesText += " -- " + e.endIndex;                                
                              var text = e.startValue;
                              text += " -- " + e.endValue;

                              var powerText = powerStart + " W ";
                              powerText += " -- " + powerEnd + " W ";

                              var stepText = stepStart + " steps ";
                              stepText += " -- " + stepEnd + " steps ";

                              document.getElementById("indices").innerHTML = indicesText;
                              document.getElementById("selection").innerHTML = text;
                              document.getElementById("power").innerHTML = powerText;
                              document.getElementById("steps").innerHTML = stepText;
                              document.getElementById("powerPerStep").innerHTML = (powerEnd - powerStart) / (stepEnd - stepStart);
                            }
                          }]
                    });

                    // // generate some random data, quite different range
                    // function generateChartData() {
                    //     var day = <%- unixDay %>;
                    //     console.log(day);
                        
                    //     var chartData = [];
                    //     // current date
                    //     var firstDate = new Date();
                    //     // now set 500 minutes back
                    //     firstDate.setMinutes(firstDate.getDate() - 1000);

                    //     // and generate 500 data items
                    //     for (var i = 0; i < 10000; i++) {
                    //         var newDate = new Date(firstDate);
                    //         // each time we add one minute
                    //         newDate.setSeconds(newDate.getSeconds() + i);
                    //         // some random number
                    //         var power = Math.round(Math.random() * 40 + 10 + i + Math.random() * i / 5)/5000;
                    //         var step = i;
                    //         // add data item to the array
                    //         chartData.push({
                    //             date: newDate,
                    //             power: power,
                    //             steps: step
                    //         });
                    //     }
                    //     return chartData;
                    // }
                </script>
                <div id="instant-chart-div"></div>
                <div class="tools text-center">
                    <div class="row">
                      <label>INDICES:</label><div id="instantindices" class="info">...</div>
                    </div>
                    <div class="row">
                      <label>TIME RANGE:</label><div id="instantselection" class="info">...</div>
                    </div>
                    <div class="row">
                      <label>POWER:</label><div id="instantpower" class="info">...</div>
                    </div>
                    <div class="row">
                      <label>STEPS:</label><div id="instantsteps" class="info">...</div>
                    </div>
                </div>
                <script type="text/javascript">

                    var instantchartData = <%- JSON.stringify(completeInstantData) %>;
                    console.log(instantchartData);
                    var instantchart = AmCharts.makeChart("instant-chart-div", {
                        "type": "serial",
                        "theme": "dark",
                        "legend": {
                            "useGraphSettings": true
                        },
                        "marginRight": 80,
                        "dataProvider": instantchartData,
                        "valueAxes": [{
                            "id":"v3",
                            "position": "left",
                            "title": "Voltage (V)",
                            "axisThickness": 2,
                            "gridAlpha": 0,
                            "axisAlpha": 1,
                            "axisColor": "#FFA400",
                            "position": "left"
                        }, {
                            "id":"v4",
                            "position": "right",
                            "title": "Steps",
                            "axisThickness": 2,
                            "gridAlpha": 0,
                            "axisAlpha": 1,
                            "axisColor": "#87BCDE",
                            "position": "right"
                        }],
                        "graphs": [{
                            "valueAxis": "v3",
                            "lineColor": "#FFA400",
                            "fillAlphas": 0.4,
                            "title": "Voltage (V)",
                            "valueField": "power",
                            "balloonText": "<div style='margin:5px; font-size:19px;'>Voltage: <b>[[value]] V</b></div>"
                        }, {
                            "valueAxis": "v4",
                            "lineColor": "#87BCDE",
                            "fillAlphas": 0.4,
                            "title": "Steps",
                            "valueField": "steps",
                            "balloonText": "<div style='margin:5px; font-size:19px;'>Steps: <b>[[value]]</b></div>"
                        }],
                        "chartScrollbar": {
                            "graph": "v3",
                            "scrollbarHeight": 80,
                            "backgroundAlpha": 0,
                            "selectedBackgroundAlpha": 0.1,
                            "selectedBackgroundColor": "#888888",
                            "graphFillAlpha": 0,
                            "graphLineAlpha": 0.5,
                            "selectedGraphFillAlpha": 0,
                            "selectedGraphLineAlpha": 1,
                            "autoGridCount": true,
                            "color": "#AAAAAA"
                        },
                        "chartCursor": {
                            "categoryBalloonDateFormat": "JJ:NN:SS, DD MMMM",
                            "cursorPosition": "mouse"
                        },
                        "categoryField": "date",
                        "categoryAxis": {
                            "minPeriod": "fff",
                            "parseDates": true,
                            "axisColor": "#DADADA",
                            "minorGridEnabled": true
                        },
                        "export": {
                            "enabled": true,
                            "position": "bottom-right"
                        },
                        "listeners": [{
                            "event": "zoomed",
                            "method": function(e) {
                                var powerStart = instantchart.graphs[0].data[e.startIndex].dataContext.power;
                                var stepStart = instantchart.graphs[0].data[e.startIndex].dataContext.steps;
                                var powerEnd = instantchart.graphs[0].data[e.endIndex].dataContext.power;
                                var stepEnd = instantchart.graphs[0].data[e.endIndex].dataContext.steps;

                              var indicesText = e.startIndex;
                              indicesText += " -- " + e.endIndex;                                
                              var text = e.startValue;
                              text += " -- " + e.endValue;

                              var powerText = powerStart + " W ";
                              powerText += " -- " + powerEnd + " W ";

                              var stepText = stepStart + " steps ";
                              stepText += " -- " + stepEnd + " steps ";

                              document.getElementById("instantindices").innerHTML = indicesText;
                              document.getElementById("instantselection").innerHTML = text;
                              document.getElementById("instantpower").innerHTML = powerText;
                              document.getElementById("instantsteps").innerHTML = stepText;
                            }
                        }]
                    });

                    // // generate some random data, quite different range
                    // function generateChartData() {
                    //     var day = <%- unixDay %>;
                    //     console.log(day);
                        
                    //     var chartData = [];
                    //     // current date
                    //     var firstDate = new Date();
                    //     // now set 500 minutes back
                    //     firstDate.setMinutes(firstDate.getDate() - 1000);

                    //     // and generate 500 data items
                    //     for (var i = 0; i < 10000; i++) {
                    //         var newDate = new Date(firstDate);
                    //         // each time we add one minute
                    //         newDate.setSeconds(newDate.getSeconds() + i);
                    //         // some random number
                    //         var power = Math.round(Math.random() * 40 + 10 + i + Math.random() * i / 5)/5000;
                    //         var step = i;
                    //         // add data item to the array
                    //         chartData.push({
                    //             date: newDate,
                    //             power: power,
                    //             steps: step
                    //         });
                    //     }
                    //     return chartData;
                    // }
                </script>


        </div>
    </div>

    
   
</body>
</html>
